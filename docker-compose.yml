services:
  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "5000:5000"
      - "8501:8501"
    env_file:
      - ./keys/config.env  # Charge les variables d'environnement
    environment:
      - API_KEY=${API_KEY:?ERREUR - Variable API_KEY non dÃ©finie}
    restart: unless-stopped
    volumes:
      - .:/app
      - ./keys:/app/keys
    depends_on:
      - monitoring
    networks:
      - detectionpannes-net

  monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana:/grafana/data
      - ./monitoring/prometheus.yml:/prometheus/prometheus.yml
      - ./monitoring/grafana.ini:/grafana/conf/grafana.ini
    networks:
      - detectionpannes-net
      -
# Ajout du service MLflow
  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: mlflow
    restart: always
    ports:
      - "5001:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    command:
      mlflow server --backend-store-uri file:/mlruns --host 0.0.0.0 --port 5000
    volumes:
      - ./mlruns:/mlruns  # ðŸ”¹ Monte un volume local pour garder les expÃ©riences

volumes:
  mlruns:  # ðŸ”¹ DÃ©finit un volume nommÃ© pour la persistance
networks:
  detectionpannes-net:
    driver: bridge
